# This is a basic workflow to help you get started with Actions

name: CI

env:
  APP_NAME              : "ClientSentryAPI"
  AWS_S3_BUCKET         : "build.repository.spacerocks"
  AWS_S3_BUCKET_ARTIFACT_PATH    : "release/com/spacerocks/client/sentry"
  AWS_S3_BUCKET_ARTIFACT_POSTFIX : "jar"
  AWS_REGION            : "us-west-2"
  BUILDER_EMAIL         : "dgreenfield0@gmail.com"
  BUILDER_NAME          : "shipper"
  MVN_REPO_ID           : "client-sentry-api"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the release branch
  push:
    branches: [ release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github 
      - name: env setup - Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: env setup - Git settings
        run: |
          git config user.email "dgreenfield0@gmail.com"
          git config user.name "shipper"
      - name: Build & Deploy ${{ env.APP_NAME }}
        run: | 
          # #####################################################
          # #####################################################
          # Retrieve next version id
          # #####################################################
          ./deploy_scripts/next_version.sh false
          next_version=$(./deploy_scripts/next_version.sh true)
          # #####################################################
          # #####################################################
          # Retrieve app artifact tag
          # #####################################################
          # artifact_id=$(./deploy_scripts/artifact_id.sh $next_version)
          # #####################################################
          echo "Build, version and tag app"
          # #####################################################
          mvn -B --quiet --no-transfer-progress release:clean release:prepare -DscmCommentPrefix="--skip-ci Preparing next build version - build" -DtagNameFormat="v@{project.version}"
          # #####################################################
          # #####################################################
          # echo "Upload Artifact"
          # #####################################################
          git checkout tags/v${next_version} -b inter-${next_version}
          mvn --quiet --no-transfer-progress clean deploy
          # #####################################################
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 